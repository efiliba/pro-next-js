import { auth, signIn, signOut } from "@/auth";
import { LogInOut } from "@/components";
import type { Metadata } from "next";
import { SessionProvider } from "next-auth/react";

import "next-auth/react";

import localFont from "next/font/local";

import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();
  if (session?.user) {
    const { name, email, image } = session.user; // Filter out sensitive data
    session.user = { name, email, image };
  }

  return (
    <SessionProvider basePath="/api/auth" session={session}>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased dark`}
        >
          <LogInOut
            onSignIn={async () => {
              "use server";
              await signIn();
            }}
            onSignOut={async () => {
              "use server";
              await signOut();
            }}
          />
          {children}
        </body>
      </html>
    </SessionProvider>
  );
}
